#include "expression_evaluator.h"
#include <iomanip>
void testCal(std::vector<std::string> &expressions){
    for (const auto& expr : expressions) {
        std::cout << expr << ": "<<std::endl;
        Calculator cal(expr);
        if(!cal.getisValid() || !cal.calculate()){
            std::cout<<"ILLIGAL"<<std::endl;
        }else {
            std::cout<< std::setprecision(8) <<cal.getresult()<<std::endl;
        }
    }
}

int main() {
    
    std::vector<std::string> exp[10];
    int end = -1;

    // 括号不匹配
    std::cout<<"----------------------------------------"<<std::endl;
    std::cout<<"括号不匹配"<<std::endl;
    exp[++end] = {  
        "(3 + 2 * (4 - 1",          // 错误：括号不匹配
        "((5 + 6) * 3) - 4)",      // 错误：括号不匹配
        "3 + (4 - 2))",            // 错误：括号不匹配
        "((2)+(2))+5+6*(2)+6)"     // 错误：括号不匹配
    };
    testCal(exp[end]);

    // 运算符连续使用
    std::cout<<"----------------------------------------"<<std::endl;
    std::cout<<"运算符连续使用"<<std::endl;
    exp[++end] = {  
        "7 --- 2",                // 错误：连续运算符
        "7 -- 2",                 // 正确: 7 - (-2) = 7 + 2 = 9
        "4 ** 2",                 // 错误：非法运算符 **
        "3 + * 2",                // 错误：运算符缺失数字
        "10 / / 5",               // 错误：连续运算符
        "(7 +-1)+- 2.5",          // 正确: (7 + (-1)) + (-2.5) = 6 - 2.5 = 3.5
        "(7 -+1)-+ 2.5",          // 错误，-+1不合法
        "(7 *-1)/- 2",            // 正确: (7 * -1) / (-2) = -7 / -2 = 3.5
        "(7 -*1)/- 2",            // 错误：运算符使用错误
    };
    testCal(exp[end]);

    // 以运算符开头或结尾
    std::cout<<"----------------------------------------"<<std::endl;
    std::cout<<"以运算符开头或结尾"<<std::endl;
    exp[++end] = { 
        "+ 5 * 3",                // 错误：以运算符开头
        "5 * 3+",                 // 错误：以运算符结尾
        "7 -",                    // 错误：以运算符结尾
        "- 7",                    // 错误：以运算符开头
        "* (4 + 5)",              // 错误：以运算符开头
        "(4 + 5) *",              // 错误：以运算符结尾
        "/ (3 + 2)",              // 错误：以运算符开头
        "(3 + 2) /"               // 错误：以运算符结尾
    };
    testCal(exp[end]);

    // 除数为 0
    std::cout<<"----------------------------------------"<<std::endl;
    std::cout<<"除数为零"<<std::endl;
    exp[++end] = { 
        "8 / 0",                  // 错误：除以零
        "10 / (3 - 3)",           // 错误：除以零
        "15 / (7 - (2 + 5))"      // 错误：除以零
    };
    testCal(exp[end]);

    // 括号和负号运算符
    std::cout<<"----------------------------------------"<<std::endl;
    std::cout<<"括号和负号运算符"<<std::endl;
    exp[++end] = {  
        "12.3*(-1)/3",            // 正确: 12.3 * (-1) / 3 = -12.3 / 3 = -4.1
        "(8.12 / -2) /1",         // 正确: 8.12 / (-2) / 1 = -4.06
        "10.10 / (2 +- 3)",       // 正确: 10.10 / (2 + (-3)) = 10.10 / (-1) = -10.10
        "-15 / (7 *-1/-(2 + 5))", // 正确: -15 / (7 * -1 / -(7)) = -15 / (7 * -1 / -7) = -15 / 1 = -15
        "-(2)-(-3)",              // 正确: -2 - (-3) = -2 + 3 = 1
        "2.3+4*((12)-(-2))",      // 正确: 2.3 + 4 * (12 + 2) = 2.3 + 56 = 58.3
        "(-(-5.2))*(-4.2)+-3/6"  // 正确: -(-5.2) = 5.2; 5.2 * (-4.2) = -21.84; -3 / 6 = -0.5; -21.84 + (-0.5) = -22.34
    };
    testCal(exp[end]);

    // 使用科学计数法
    std::cout<<"----------------------------------------"<<std::endl;
    std::cout<<"使用科学计数法"<<std::endl;
    exp[++end] = { 
        "8.12e3 / -2",            // 正确: 8.12e3 / -2 = 8120 / -2 = -4060
        "10.10e1 / (2 +- 3)",     // 正确: 10.10e1 / (2 + (-3)) = 101 / (-1) = -101
        "15e-1 / (7 *-1- (2 + 5))", // 正确: 15e-1 = 1.5; (7 * -1) - (2 + 5) = -7 - 7 = -14; 1.5 / -14 = -0.1071

        "2e3e4",                 // 错误：重复的e
        "e5 + 1",                // 错误：e不能单独出现
        "1.2e + 3",              // 错误：缺少指数
        "1 + -",                 // 错误：单独的负号
        "1e",                    // 错误：不完整的科学计数法
        "1.2e++3",               // 错误：连续符号
        "(2e-) + 3"              // 错误：括号内不完整的科学计数法
    };
    testCal(exp[end]);

    std::cout<<"----------------------------------------"<<std::endl;
    std::cout << "测试负数、括号和科学计数法的表达式" << std::endl;

    exp[++end] = {
        "1.5e2 + -(3.1E-2)",      // 正确: 1.5e2 = 150, 3.1E-2 = 0.031; 150 + (-0.031) = 149.969
        "-(2*-1.23e4) + -(5.67E+4)",    // 正确: -(2 * -1.23e4) = 24600; -(5.67e4) = -56700; 24600 + -56700 = -32100
        "3 + -1/ -2.1e+3",           // 正确: -1 / -2.1e3 = 0.000476; 3 + 0.000476 = 3.000476
        "-3.14e-2",              // 正确: -3.14e-2 = -0.0314
        "2.5e2 *1/(-1/ -3.2e1)",      // 正确: 2.5e2 * 1 / (1 / 3.2e1) = 250 * 3.2e1 = 8000
    };
    testCal(exp[end]);

    std::cout<<"----------------------------------------"<<std::endl;
    std::cout << "复杂测试" << std::endl;
    exp[++end] = {
        "((1e3 - (2e2 + 1e1)) / (3e-2 * (4e3 + -5e2)))",       // 正确: 1e3 - 2e2 - 1e1 = 790; 3e-2 * 3500 = 105; 790 / 105 = 7.523809
        "(((-5e2 + 6e3) * 3e1) / (2e4 - (3e-2 + -1e-1)))",      // 正确: (-5e2 + 6e3) = 5500; 5500 * 3e1 = 165000; 2e4 - 3e-2 + 1e-1 = 19999.97; 165000 / 19999.97 = 8.25
        "(3e2 - (2e3 + (1e4 / (-5e1 - 2e2))))",                  // 正确: 300 - (2000 + (10000 / (-50 - 200))) = -1660
    };
    testCal(exp[end]);

    return 0;
}